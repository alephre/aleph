[tox]
envlist = py36,linters
skipsdist = true

[testenv]
deps =
    pytest!=3.0.5
    coverage
commands =
    coverage run --parallel-mode -m pytest {posargs}
    coverage combine
    coverage report -m

# Autoformatter
[testenv:black]
basepython = python3
skip_install = true
deps =
    black>=19.3b0
commands =
    black aleph/

# Linters
[testenv:flake8]
basepython = python3
skip_install = true
deps =
    flake8
    flake8-colors
    flake8-docstrings>=0.2.7
    flake8-import-order>=0.9
    flake8-typing-imports>=1.1
    pep8-naming
commands =
    flake8 aleph/ tests/

[testenv:pylint]
basepython = python3
skip_install = true
deps =
    -rrequirements.txt
    pyflakes
    pylint
commands =
    pylint aleph/

# Docs
[testenv:doc8]
basepython = python3
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 docs/source/

[testenv:docs]
basepython = python3
deps =
    -rdocs/source/requirements.txt
commands =
    sphinx-build -E -W -c docs/source/ -b html docs/source/ docs/build/html
    sphinx-build -E -W -c docs/source/ -b man docs/source/ docs/build/man

# Security checks
[testenv:bandit]
basepython = python3
skip_install = true
deps =
    bandit
commands =
    bandit -r aleph/ -c .bandit.yml

# All linters
[testenv:linters]
basepython = python3
skip_install = true
deps =
    {[testenv:black]deps}
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:doc8]deps}
    {[testenv:bandit]deps}
commands =
    {[testenv:black]commands}
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}
    {[testenv:doc8]commands}
    {[testenv:bandit]commands}
